version: '3.8'

services:
  cart:
    container_name: cart
    build:
      context: .
      dockerfile: .docker/cart/dev.dockerfile
    ports:
      - 8410:8410
    volumes:
      - ./cart/:/var/www/app
      - ./.docker/cart/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/cart/var/log:/var/log/nginx
    restart: unless-stopped
    env_file:
      - ./.env

  cart-database:
    image: mysql:8.0
    container_name: cart-database
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./cart-database/data:/var/lib/mysql

  cart-database-test:
    image: mysql:8.0
    container_name: cart-database-test
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${TEST_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${TEST_MYSQL_DATABASE}
      MYSQL_USER: ${TEST_MYSQL_USER}
      MYSQL_PASSWORD: ${TEST_MYSQL_PASSWORD}
    volumes:
      - ./cart-database/test-data:/var/lib/mysql

  delivery-database:
    image: mysql:8.0
    container_name: delivery-database
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DELIVERY_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DELIVERY_MYSQL_DATABASE}
      MYSQL_USER: ${DELIVERY_MYSQL_USER}
      MYSQL_PASSWORD: ${DELIVERY_MYSQL_PASSWORD}
    volumes:
      - ./delivery-database/data:/var/lib/mysql

  delivery-service:
    container_name: delivery-service
    build:
      context: .
      dockerfile: .docker/cart/dev.dockerfile
    ports:
      - 8411:8410
    volumes:
      - ./services/delivery/:/var/www/app
      - ./.docker/cart/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/services/delivery/var/log:/var/log/nginx
    restart: unless-stopped
    env_file:
      - ./.env

  notification-service:
    container_name: notification-service
    build:
      context: .
      dockerfile: .docker/cart/dev.dockerfile
    ports:
      - 8412:8410
    volumes:
      - ./services/notification/:/var/www/app
      - ./.docker/cart/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/services/notification/var/log:/var/log/nginx
    restart: unless-stopped
    env_file:
      - ./.env

  product-service:
    container_name: product-service
    build:
      context: .
      dockerfile: .docker/cart/dev.dockerfile
    ports:
      - 8413:8410
    volumes:
      - ./services/product/:/var/www/app
      - ./.docker/cart/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/services/product/var/log:/var/log/nginx
    restart: unless-stopped
    env_file:
      - ./.env

  statistics-service:
    container_name: statistics-service
    build:
      context: .
      dockerfile: .docker/cart/dev.dockerfile
    ports:
      - 8414:8410
    volumes:
      - ./services/statistics/:/var/www/app
      - ./.docker/cart/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/services/statistics/var/log:/var/log/nginx
    restart: unless-stopped
    env_file:
      - ./.env

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: zookeeper
    user: 1000:1000
    ports:
      - 22181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./kafka/zk-data:/var/lib/zookeeper/data
      - ./kafka/zk-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    ports:
      - 2181:2181
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - ./kafka/kafka-data:/var/lib/kafka/data
    restart: always

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
