- настройки nginx
- настройки php
- права в контейнере

- индексы
- удаление measurement при удалении продукта

- Doctrine ORM relationship
- Serializer

- поменять транспорт для кафки? (баг - консюмер стал продюсером)
- настроить кафку (метод доставки, кластер, SSL, volumes)
- обработка сообщений (дубли, порядок)
- нужно ли отправлять offset и timestamp?

- скрипты для билдов
- запуск консюмеров
- продакшн

- как работать с КЛАДР




другие сервисы - учёт и администрирование товаров на складах, нотификаторы (sms, email), тарификаторы (для расчёта доставки) и прочие
Всё, что касается общения с соседними сервисами, делаем на заглушках, но так, чтобы допилить их до потенциального реального проекта было максимально просто.

Наша зона ответственности - корзина, заказ и статус доставки этого заказа.
Админка: управление заказами (и их статусами) и пользователями.

Неавторизованный пользователь может только лишь просматривать список товаров.

Авторизованный пользователь может заполнять корзину и делать заказ.
Для того, чтобы сделать заказ, пользователю нужно взять в корзину минимум 1 товар, указать свой номер телефона и выбрать способ доставки - курьер или самовывоз. В заказе не может быть более 20 позиций.
Статусы заказа могут быть такими: оплачен и ждёт сборки, в сборке, готов к выдаче/доставляется, получен или отменён.
Статус заказа может обновить админ и сообщение от соседнего сервиса.

Для регистрации нужно указать имя, номер телефона и email. При регистрации пользователю должна прийти SMS с приветствием.



А ещё у нас есть отчёты - каждый день сторонний сервис дёргает наш эндпоинт, который НАЧИНАЕТ генерацию отчёта. Этому отчёту присваивается какой то номер или бейджик, который мы и отдаём в ответе. По окончании генерации мы шлём событие в кафку о том, что отчёт сгенерирован. Сам по себе отчёт для простоты будем сохранять в локальный файл.
Что в отчёте: в отчёте у нас список всех проданных товаров т.е. если велосипед_10 купили 5 раз разные люди, то он 5 раз будет в этом отчёте. Это будет файл .jsonl вида:
